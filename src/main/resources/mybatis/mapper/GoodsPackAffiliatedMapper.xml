<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zh.dao.GoodsPackAffiliatedMapper">
  <resultMap id="BaseResultMap" type="cn.zh.pojo.GoodsPackAffiliated">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_pack_id" jdbcType="BIGINT" property="goodsPackId" />
    <result column="goods_info_id" jdbcType="BIGINT" property="goodsInfoId" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_pack_id, goods_info_id, goods_num
  </sql>
  <select id="selectByExample" parameterType="cn.zh.pojo.GoodsPackAffiliatedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_pack_affiliated
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.zh.pojo.GoodsPackAffiliatedExample">
    delete from goods_pack_affiliated
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zh.pojo.GoodsPackAffiliated">
    insert into goods_pack_affiliated (id, goods_pack_id, goods_info_id, 
      goods_num)
    values (#{id,jdbcType=BIGINT}, #{goodsPackId,jdbcType=BIGINT}, #{goodsInfoId,jdbcType=BIGINT}, 
      #{goodsNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.zh.pojo.GoodsPackAffiliated">
    insert into goods_pack_affiliated
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsPackId != null">
        goods_pack_id,
      </if>
      <if test="goodsInfoId != null">
        goods_info_id,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsPackId != null">
        #{goodsPackId,jdbcType=BIGINT},
      </if>
      <if test="goodsInfoId != null">
        #{goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zh.pojo.GoodsPackAffiliatedExample" resultType="java.lang.Long">
    select count(*) from goods_pack_affiliated
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_pack_affiliated
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsPackId != null">
        goods_pack_id = #{record.goodsPackId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsInfoId != null">
        goods_info_id = #{record.goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_pack_affiliated
    set id = #{record.id,jdbcType=BIGINT},
      goods_pack_id = #{record.goodsPackId,jdbcType=BIGINT},
      goods_info_id = #{record.goodsInfoId,jdbcType=BIGINT},
      goods_num = #{record.goodsNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>